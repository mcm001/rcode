#include <avr/io.h>
#include <avr/interrupt.h>

const unsigned char buzz[] PROGMEM = {
228,33,165,146,84,185,84,153,125,111,170,68,184,97,114,175,73,161,119,121,132,131,118,132,129,117,141,118,117,164,77,165,115,114,152,117,114,163,86,159,115,129,128,136,112,142,119,128,142,99,170,74,189,59,201,51,199,72,161,123,105,171,72,182,92,137,152,78,190,73,160,131,91,181,80,150,138,90,176,88,143,140,94,167,94,150,119,125,142,102,163,91,154,120,124,126,143,108,125,166,68,167,141,73,175,140,66,179,147,48,195,144,42,196,153,37,187,170,20,199,163,16,219,130,33,243,78,99,188,65,159,131,92,179,83,147,141,100,164,99,155,109,128,160,80,165,124,108,152,120,119,147,112,136,134,119,131,143,90,171,105,115,163,96,136,140,113,128,148,72,179,78,176,78,182,66,195,53,208,48,205,60,187,85,153,128,105,173,68,192,72,165,115,114,161,85,165,111,118,163,79,176,96,135,144,96,156,119,114,160,88,163,105,142,120,125,144,95,170,95,135,149,95,148,132,113,123,170,65,170,142,66,188,126,70,188,132,53,201,140,31,220,137,21,225,147,10,231,138,15,242,114,57,207,84,109,178,76,159,128,103,172,89,142,153,86,159,118,128,126,134,135,103,156,119,111,158,111,119,160,94,152,115,123,141,124,113,150,121,100,185,61,176,101,152,90,182,62,192,71,179,76,183,65,201,48,212,41,213,50,198,72,170,107,129,150,88,178,78,175,96,147,130,111,153,108,136,138,106,152,109,137,130,117,143,117,128,141,107,152,106,148,106,153,111,118,166,79,161,129,96,166,113,114,153,126,84,200,79,113,198,65,124,195,67,111,218,49,107,237,35,106,245,39,92,249,54,107,201,64,126,178,72,152,137,101,161,97,144,144,89,160,126,100,165,112,118,146,128,109,146,131,109,140,134,117,131,140,94,175,84,150,131,107,142,135,111,124,169,66,189,74,175,76,192,53,210,47,202,57,199,55,204,53,202,56,198,61,188,84,159,112,131,141,100,169,82,170,101,142,129,115,150,105,143,128,120,137,124,126,136,119,135,128,123,138,119,136,119,143,102,165,95,140,150,83,170,119,96,179,92,121,170,92,115,193,55,148,182,45,167,169,49,160,192,20,179,194,2,188,189,30,160,182,45,155,169,64,159,146,88,160,119,123,147,97,156,123,101,175,97,115,170,95,124,163,100,117,171,90,138,141,106,143,117,140,102,171,76,171,115,109,158,108,138,106,175,54,212,47,200,56,206,38,224,
};

int sounddata_length=0;
volatile uint16_t sample;
byte lastSample;

ISR(TIM0_OVF_vect)
{
  if(sample >= sounddata_length) {
    sample = 0;
  }

  static volatile uint16_t sampleCounter = 0;
  static volatile uint16_t outputCounter = 0;
  static volatile uint16_t freqcounter = 0;
  sampleCounter++;
  freqcounter++;


  if(sampleCounter >= 400) { // runs at 8.1khz
      //sample flash memory
      lastSample = pgm_read_byte(&buzz[sample]); //buzz[sample];
      sample++;
      
      sampleCounter = 0; //reset counter to 0
  }

  if(freqcounter < (lastSample / 5) )
    {
       PORTB |= digitalPinToBitMask(0); //turn on pin
    }
  else
    {
       PORTB &= ~digitalPinToBitMask(0); //turn off pin
    }

  if(freqcounter >= (256 / 5) ) { freqcounter = 0; }
  
  TCNT0 = 65535; // overflow reset 
}

int
main(void)
{

        /* setup */
        DDRB = 0b00000001; // set speaker pin as OUTPUT
//        pinMode(8, OUTPUT);
        TCCR0B |= (1<<CS00); // no prescaling
        TIMSK0 |= _BV(TOIE0); // enable Timer Overflow interrupt
        sei(); // enable global interrupts

        lastSample = pgm_read_byte(&buzz[0]);

        /* loop */
        while (1);
}
